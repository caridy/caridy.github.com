{"majorversion": 3, "classmap": {"yui2": {"name": "yui2", "constructors": [{"params": [{"type": "", "name": "o", "description": " Optional configuration object.  Options:\n<ul>\n<li>type:\njs or css, by default the loader will include both</li>\n<li>timeout:\nnumber of milliseconds before a timeout occurs when dynamically loading nodes.  in not set, there is no timeout</li>\n<li>modules:\nA list of module definitions.  See Loader.addModule for the supported module metadata</li>\n</ul>"}], "description": "The yui2 is a utility to load YUI 2 modules within a YUI 3 Sandbox object. This utility is very handy\nfor incremental migration. It provides an easy way to bring YUI 2 code into YUI 3 world,\nrelying in YUI 3 lazy loading system and organization, and providing an easy way to mashup\nyui2 and yui3 code. It uses a YUI 2 Loader under the hook so you don't need to worry about dependencies,\nand it also provides a pipeline to add custom YUI 2 modules, and a filter by type (css or JS) during the\nloading process."}], "namespace": "", "module": "gallery-yui2", "methods": {"_filterConf": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "object", "name": "o", "description": "  currrent configuration object"}], "description": "Verify if the current configuration object just defines new modules. If that's the case, \nwe will use \"_config\" as the computed configuration, and \"o\" as the list of modules to add.", "private": ""}, "_register": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "string", "name": "name", "description": "  name of the module"}, {"type": "string|object", "name": "m", "description": "  module meta-data"}], "description": "Add a module to the queue. When the loader become available, the module will be added to the loader list automatically, \nthis method also normalize the module information before include it", "private": ""}, "use": {"return": {"type": "", "description": "void"}, "params": [{"type": "string", "name": "modules*", "description": "  1-n modules to bind (uses arguments array)"}, {"type": "function", "name": "*callback", "description": "  callback function executed when \nthe instance has the required functionality.  If included, it\nmust be the last parameter.\nY.yui2().use('tabview', callback)"}], "description": "Load a set of modules and notify thru the callback method.", "guessedname": "use", "guessedtype": "function"}, "_initLoader": {"return": {"type": "", "description": "object"}, "static": "", "params": [{"type": "", "name": "l", "description": " configuration object, normally a reference to YAHOO_config"}], "description": "Initialization process for the YUI Loader obj. In YUI 2.x we should\nhave a single instance to control everything.", "private": ""}}, "file": "gallery-yui2.js", "shortname": "yui2", "public": "", "description": "The yui2 is a utility to load YUI 2 modules within a YUI 3 Sandbox object. This utility is very handy\nfor incremental migration. It provides an easy way to bring YUI 2 code into YUI 3 world,\nrelying in YUI 3 lazy loading system and organization, and providing an easy way to mashup\nyui2 and yui3 code. It uses a YUI 2 Loader under the hook so you don't need to worry about dependencies,\nand it also provides a pipeline to add custom YUI 2 modules, and a filter by type (css or JS) during the\nloading process."}}, "version": "3.0.0", "modules": {"gallery-yui2": {"description": "<p>The YUI 2 wrapper makes it easy to transform existing YUI 2 code into YUI 3 compatible code, \nusing lazy load to include the required yui2 modules, Leveraging YUI Loader Utility.</p>\n<p>\n<code>\n&#60;script type=\"text/javascript\"&#62; <br>\n<br>\n//\tCall the \"use\" method, passing in \"gallery-yui2\".  This will <br>\n//\tload a wrapper for YUI 2 code. This wrapper will allow you to define<br>\n//  yui 2 dependencies, and wrapping yui 2 code using lazy load using YUI 2 Loader<br>\n//  to include those dependencies. <br>\n<br>\nYUI().use(\"gallery-yui2\", function(Y) { <br>\n<br>\nY.yui2().use(\"tabview\", function () { <br>\n<br>\n//\tThe scope of the callback will be a reference to Y <br>\n<br>\t\t\t\nvar myTabs = new YAHOO.widget.TabView(\"demo\"); <br>\n<br>\n}); <br>\n<br>\t\t\n}); <br>\n<br>\t\n&#60;/script&#62; <br>\n</code>\n</p>", "submodules": [], "classlist": ["yui2"], "filelist": ["gallery-yui2.js"], "subdata": {}, "name": "gallery-yui2"}}, "filemap": {"gallery-yui2.js": {"classlist": ["yui2"], "name": "gallery-yui2.js", "module": "gallery-yui2"}}}