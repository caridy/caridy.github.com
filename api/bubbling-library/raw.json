{"majorversion": 2, "filemap": {"tooltips.js": {"classlist": ["YAHOO.widget.TooltipManager"], "name": "tooltips.js", "module": "navigation"}, "bubbling.js": {"classlist": ["YAHOO.Bubbling"], "name": "bubbling.js", "module": "accordion"}, "wizard.js": {"classlist": ["YAHOO.plugin.WizardManager"], "name": "wizard.js", "module": "tooltipmanager"}, "accordion.js": {"classlist": ["YAHOO.widget.AccordionManager"], "name": "accordion.js", "module": "accordion"}, "lighter.js": {"classlist": ["YAHOO.plugin.Lighter"], "name": "lighter.js", "module": "dispatcher"}, "navigation.js": {"classlist": ["YAHOO.plugin.Navigation"], "name": "navigation.js", "module": "loading"}, "loading.js": {"classlist": ["YAHOO.widget.Loading"], "name": "loading.js", "module": "lighter"}, "dispatcher.js": {"classlist": ["YAHOO.plugin.Dispatcher"], "name": "dispatcher.js", "module": "bubbling"}}, "modules": {"tooltipmanager": {"description": "Tooltip Manager Definition: Create floating element to display hints/information based on the trigger element.", "submodules": [], "classlist": ["YAHOO.widget.TooltipManager"], "filelist": ["wizard.js"], "subdata": {}, "requires": "yahoo", "name": "tooltipmanager"}, "loading": {"description": "Loading Mask Definition: A transparent mask to avoids weird effects during the rendering and loading process for a page, also including support for AJAX requests.", "submodules": [], "classlist": ["YAHOO.widget.Loading"], "filelist": ["navigation.js"], "subdata": {}, "requires": "yahoo", "name": "loading"}, "accordion": {"description": "Accordion Definition: Create expandable and collapsible elements based on the HTML markup and few CSS rules.", "submodules": [], "classlist": ["YAHOO.widget.AccordionManager"], "filelist": ["accordion.js", "bubbling.js"], "subdata": {}, "requires": "yahoo", "name": "accordion"}, "bubbling": {"description": "Bubbling Core Definition: The bubbling core basically define a mechanism (communication pipes) to easily interact between the browser, server and the components in a web app, defining a programming pattern based on messages and listeners at the highest level.", "submodules": [], "classlist": ["YAHOO.Bubbling"], "filelist": ["dispatcher.js"], "subdata": {}, "requires": "yahoo", "name": "bubbling"}, "wizard": {"description": "Wizard Manager Definition.\nUse this plugin to management your dynamic areas.", "submodules": [], "classlist": ["YAHOO.plugin.WizardManager"], "filelist": [], "subdata": {}, "requires": "yahoo", "name": "wizard"}, "lighter": {"description": "The Lighter will monitoring the areas using the className value and will highlighting the yui-cms-item areas on mouseover.", "submodules": [], "classlist": ["YAHOO.plugin.Lighter"], "filelist": ["loading.js"], "subdata": {}, "requires": "yahoo", "name": "lighter"}, "navigation": {"description": "Navigation Manager Definition.\nNavigation - Use this object to control the YUI History Manager...\nAdd your custom navigation entries to create the corresponding browser actions", "submodules": [], "classlist": ["YAHOO.plugin.Navigation"], "filelist": ["tooltips.js"], "subdata": {}, "requires": "yahoo", "name": "navigation"}, "dispatcher": {"description": "Dispatcher Definition", "submodules": [], "classlist": ["YAHOO.plugin.Dispatcher"], "filelist": ["lighter.js"], "subdata": {}, "requires": "yahoo", "name": "dispatcher"}}, "classmap": {"YAHOO.plugin.Lighter": {"name": "YAHOO.plugin.Lighter", "namespace": "YAHOO.plugin", "module": "lighter", "guessedname": "Lighter", "methods": {"add": {"return": {"type": "", "description": "void"}, "description": "add new class to the monitoring list...", "params": [{"type": "string", "name": "className", "description": ""}, {"type": "object", "name": "conf", "description": "        Configuration params for the areas with this classname"}], "guessedname": "add", "guessedtype": "function", "public": ""}, "remove": {"return": {"type": "", "description": "void"}, "description": "Remove a class from the monitoring list...", "params": [{"type": "object", "name": "id", "description": "\tclassName"}], "guessedname": "remove", "guessedtype": "function", "public": ""}}, "static": "", "file": "lighter.js", "guessedtype": "function", "shortname": "Lighter", "description": "The Lighter Plugin"}, "YAHOO.plugin.WizardManager": {"name": "YAHOO.plugin.WizardManager", "namespace": "YAHOO.plugin", "module": "wizard", "guessedname": "WizardManager", "methods": {"adopt": {"return": {"type": "", "description": "Object"}, "description": "adopt an area with the content inside and add to the list", "params": [{"type": "string", "name": "id", "description": "  \t\t\tUnique Id for the area"}, {"type": "object", "name": "userConfig", "description": "\tLiteral object with the configuration for the new area"}], "guessedname": "adopt", "guessedtype": "function", "public": ""}, "finisher": {"public": "", "return": {"type": "", "description": "void"}, "description": "mark the current wizard as finished", "guessedname": "finisher", "guessedtype": "function"}, "getStatus": {"return": {"type": "", "description": "string"}, "description": "get the current status of the wizard", "params": [{"type": "string", "name": "id", "description": "   Unique Id for the area"}], "guessedname": "getStatus", "guessedtype": "function", "public": ""}, "add": {"return": {"type": "", "description": "Object"}, "description": "add a new area to the list", "params": [{"type": "string", "name": "id", "description": "  \t\t\tUnique Id for the area"}, {"type": "object", "name": "userConfig", "description": "\tLiteral object with the configuration for the new area"}], "guessedname": "add", "guessedtype": "function", "public": ""}, "remove": {"return": {"type": "", "description": "void"}, "description": "Remove an area from the stock...", "params": [{"type": "string", "name": "id", "description": "  \t\t\tUnique Id for the area"}], "guessedname": "remove", "guessedtype": "function", "public": ""}, "getValues": {"return": {"type": "", "description": "boolean"}, "description": "get the values for the current wizard", "params": [{"type": "string", "name": "id", "description": "   Unique Id for the area"}], "guessedname": "getValues", "guessedtype": "function", "public": ""}, "jump": {"return": {"type": "", "description": "boolean"}, "description": "use the jump method to manually jump to new uri", "params": [{"type": "string", "name": "id", "description": "   area Id"}, {"type": "string", "name": "uri", "description": "  url for the next step"}], "guessedname": "jump", "guessedtype": "function", "public": ""}, "reload": {"return": {"type": "", "description": "void"}, "description": "Reload an area...", "params": [{"type": "string", "name": "id", "description": "  \t\t\tUnique Id for the area"}, {"type": "string", "name": "uri", "description": "  \t\t\turl for the next step"}], "guessedname": "reload", "guessedtype": "function", "public": ""}, "init": {"return": {"type": "", "description": "Object"}, "description": "configure the area properties", "params": [{"type": "string", "name": "id", "description": ""}, {"type": "object", "name": "userConfig", "description": ""}], "guessedname": "init", "guessedtype": "function", "public": ""}, "valuer": {"return": {"type": "", "description": "Object"}, "description": "add more values for the current area", "params": [{"type": "string|object", "name": "values", "description": "  json encoded string or a literal object"}], "guessedname": "valuer", "guessedtype": "function", "public": ""}, "setValues": {"return": {"type": "", "description": "Object"}, "description": "set the values for the current wizard", "params": [{"type": "string", "name": "id", "description": "   Unique Id for the area"}, {"type": "string", "name": "enc", "description": "  json encoded string"}], "guessedname": "setValues", "guessedtype": "function", "public": ""}, "delegate": {"return": {"type": "", "description": "void"}, "description": "delegate the set content method...", "params": [{"type": "object", "name": "tab", "description": "\t\treference to the tab..."}, {"type": "object", "name": "tabview", "description": "   reference to the tabview (optional)..."}, {"type": "object", "name": "config", "description": "    Literal object with the user configuration vars"}], "guessedname": "delegate", "guessedtype": "function", "public": ""}}, "static": "", "file": "wizard.js", "guessedtype": "function", "shortname": "WizardManager", "description": "The Wizard Manager Plugin"}, "YAHOO.widget.AccordionManager": {"name": "YAHOO.widget.AccordionManager", "namespace": "YAHOO.widget", "module": "accordion", "guessedname": "AccordionManager", "methods": {"collapse": {"return": {"type": "", "description": "boolean"}, "description": "Collapsing all the elements in the accordion...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "collapse", "guessedtype": "function", "public": ""}, "remove": {"return": {"type": "", "description": "boolean"}, "description": "remove a certain item from the area...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "remove", "guessedtype": "function", "public": ""}, "toggle": {"return": {"type": "", "description": "boolean"}, "description": "toggle a certain item inside an area...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "toggle", "guessedtype": "function", "public": ""}, "close": {"return": {"type": "", "description": "boolean"}, "description": "Close a certain item inside an area...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "close", "guessedtype": "function", "public": ""}, "open": {"return": {"type": "", "description": "boolean"}, "description": "Open a certain item inside an area...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "open", "guessedtype": "function", "public": ""}, "expand": {"return": {"type": "", "description": "boolean"}, "description": "Expanding all the elements in the accordion...", "params": [{"type": "Node", "name": "el", "description": "   DOM reference"}], "guessedname": "expand", "guessedtype": "function", "public": ""}}, "static": "", "file": "accordion.js", "guessedtype": "function", "shortname": "AccordionManager", "description": "The Accordion Manager Widget"}, "YAHOO.plugin.Navigation": {"name": "YAHOO.plugin.Navigation", "namespace": "YAHOO.plugin", "module": "navigation", "guessedname": "Navigation", "methods": {"restore": {"public": "", "params": [{"type": "string", "name": "state", "description": "\t\t\tunique identifier for an state"}], "description": "restore a particular state based on the unique identifier", "guessedname": "restore", "guessedtype": "function"}, "tabView": {"public": "", "params": [{"type": "object", "name": "oTabview", "description": " Reference to a tabview object"}], "description": "registering a tabview object in the navigation routine", "guessedname": "tabView", "guessedtype": "function"}, "add": {"return": {"type": "", "description": "Object"}, "description": "add a new callback method for a certain state", "params": [{"type": "string", "name": "state", "description": "\t\t\tunique identifier for an state"}, {"type": "object", "name": "userConfig", "description": "\tliteral object with the configuration for the new state"}], "guessedname": "add", "guessedtype": "function", "public": ""}, "init": {"public": "", "return": {"type": "", "description": "void"}, "description": "configure the history manager package", "guessedname": "init", "guessedtype": "function"}, "setDefaultState": {"public": "", "params": [{"type": "function", "name": "default", "description": " routine for the default state..."}], "description": "registering a tabview object in the navigation routine", "guessedname": "setDefaultState", "guessedtype": "function"}, "navigate": {"return": {"type": "", "description": "boolean"}, "description": "add a new state to the history stack and navigate", "params": [{"type": "string", "name": "state", "description": "\t\t\tunique identifier for an state"}, {"type": "object", "name": "userConfig", "description": "\tliteral object with the configuration for the new state"}], "guessedname": "navigate", "guessedtype": "function", "public": ""}}, "static": "", "file": "navigation.js", "guessedtype": "function", "shortname": "Navigation", "description": "The Navigation Plugin"}, "YAHOO.widget.Loading": {"name": "YAHOO.widget.Loading", "namespace": "YAHOO.widget", "module": "loading", "guessedname": "Loading", "methods": {"hide": {"return": {"type": "", "description": "void"}, "guessedname": "hide", "guessedtype": "function"}}, "static": "", "file": "loading.js", "guessedtype": "function", "shortname": "Loading", "description": "The Loading Mask Widget"}, "YAHOO.Bubbling": {"name": "YAHOO.Bubbling", "namespace": "YAHOO", "module": "bubbling", "guessedname": "Bubbling", "methods": {"onEventTrigger": {"return": {"type": "boolean", "description": "true if one of the listeners stopped the event"}, "description": "Pipeline method to analyze the events and trigger the corresponding actions", "params": [{"type": "String", "name": "b", "description": "        Layer that should be analyzed (navigate, repaint, property, etc)"}, {"type": "Event", "name": "e", "description": "         DOM event"}, {"type": "Object", "name": "m", "description": "        Default arguments that should be shipped with the action execution"}], "guessedname": "onEventTrigger", "guessedtype": "function", "public": ""}, "getAllActions": {"return": {"type": "array", "description": "a collection of strings with the name of the matching actions"}, "description": "This method will try to match the classnames of the DOM element with the list of actions (literal object)", "params": [{"type": "Node", "name": "el", "description": "        element reference"}, {"type": "object", "name": "depot", "description": "   object with the list of possibles actions"}], "guessedname": "getAllActions", "guessedtype": "function", "public": ""}, "getOwnerByTagName": {"return": {"type": "Node", "description": "DOM Element or null"}, "description": "Analyzing the element and the ancestor path to find a node with a certain tag name", "params": [{"type": "Node", "name": "node", "description": "    \t\t DOM element that should be analyzed"}, {"type": "String", "name": "tagName", "description": "        DOM event"}], "guessedname": "getOwnerByTagName", "guessedtype": "function", "public": ""}, "initMonitors": {"public": "", "return": {"type": "", "description": "void"}, "description": "Activation process for optional listeners (resize, repaint)", "guessedname": "initMonitors", "guessedtype": "function"}, "subscribe": {"return": {"type": "", "description": "boolean if it is the first listener"}, "description": "Subscribing an behavior to certain behaviors layer...", "params": [{"type": "string", "name": "layer", "description": "  Behavior layer GUID"}, {"type": "object", "name": "bh", "description": "     The function that represent the behavior"}], "guessedname": "subscribe", "guessedtype": "function", "public": ""}, "addDefaultAction": {"return": {"type": "", "description": "void"}, "description": "adding a new action to the application layer", "params": [{"type": "string", "name": "n", "description": "     \tName of the action"}, {"type": "function", "name": "f", "description": "      \tListener"}, {"type": "boolean", "name": "force", "description": "    Process the actions without worry about the flagged value..."}], "guessedname": "addDefaultAction", "guessedtype": "function", "public": ""}, "onKeyPressed": {"return": {"type": "", "description": "void"}, "description": "Callback method for key strokes", "private": "", "params": [{"type": "Event", "name": "e", "description": "\t\t\tDOM Event"}], "guessedname": "onKeyPressed", "guessedtype": "function"}, "getYUIButton": {"return": {"type": "Object", "description": ""}, "description": "getting the real YUI Button reference from a dom element, usually the target for a certain event", "params": [{"type": "Node", "name": "t", "description": "      dom element reference"}], "guessedname": "getYUIButton", "guessedtype": "function", "public": ""}, "onRepaint": {"return": {"type": "", "description": "void"}, "description": "Callback method for repaint and resize events", "private": "", "params": [{"type": "Event", "name": "e", "description": "        DOM event"}], "guessedname": "onRepaint", "guessedtype": "function"}, "getFirstChildByTagName": {"return": {"type": "Node", "description": ""}, "description": "Getting the first child element based on the tagName", "params": [{"type": "Node", "name": "el", "description": " \t\tChild element reference"}, {"type": "object", "name": "t", "description": "  \tClassName of the Ancestor"}], "guessedname": "getFirstChildByTagName", "guessedtype": "function", "public": ""}, "init": {"public": "", "return": {"type": "", "description": "void"}, "description": "Initialization process (optional)", "guessedname": "init", "guessedtype": "function"}, "virtualTarget": {"return": {"type": "boolean", "description": ""}, "description": "Analyzing the target and the related target elements to see if the action was within a certain element", "params": [{"type": "Event", "name": "e", "description": "  event reference"}, {"type": "Node", "name": "el", "description": " \tDOM element reference"}], "guessedname": "virtualTarget", "guessedtype": "function", "public": ""}, "fire": {"return": {"type": "", "description": "boolean if someone has claim the event"}, "description": "Broadcasting the message in the corresponding behavior layer...", "params": [{"type": "string", "name": "layer", "description": "  Behavior layer GUID"}, {"type": "object", "name": "obj", "description": "    The function that represent the behavior"}], "guessedname": "fire", "guessedtype": "function", "public": ""}, "onKeyPressedTrigger": {"return": {"type": "boolean", "description": "true if one of the listeners stopped the event"}, "description": "Pipeline method to analyze key strokes events and trigger the corresponding actions", "params": [{"type": "String", "name": "args", "description": "     Literal object with the event information (target, char, etc). Useful if you want to fake this event."}, {"type": "Event", "name": "e", "description": "         DOM event"}, {"type": "Object", "name": "m", "description": "        Default arguments that should be shipped with the action execution"}], "guessedname": "onKeyPressedTrigger", "guessedtype": "function", "public": ""}, "getAncestorByClassName": {"see": "getOwnerByClassName", "static": "", "description": "YAHOO.Bubbling.getAncestorByClassName is an alias for getOwnerByClassName", "guessedname": "getAncestorByClassName", "guessedtype": "property"}, "getActionName": {"return": {"type": "string", "description": "first matching action"}, "description": "This method will try to match the classname of the DOM element with the list of actions (literal object)", "params": [{"type": "object", "name": "el", "description": "        element reference"}, {"type": "object", "name": "depot", "description": "     list of actions that should be analyzed"}], "guessedname": "getActionName", "guessedtype": "function", "public": ""}, "on": {"see": "subscribe", "static": "", "description": "YAHOO.Bubbling.on is an alias for subscribe", "guessedname": "on", "guessedtype": "property"}, "getAncestorByTagName": {"see": "getOwnerByTagName", "static": "", "description": "YAHOO.Bubbling.getAncestorByTagName is an alias for getOwnerByTagName", "guessedname": "getAncestorByTagName", "guessedtype": "property"}, "processingAction": {"return": {"type": "", "description": "void"}, "description": "Processing an action based on the classname of the target element...", "params": [{"type": "string", "name": "layer", "description": "     Behavior layer GUID"}, {"type": "object", "name": "args", "description": "      Event object (extended)"}, {"type": "object", "name": "actions", "description": "   List of available behaviors..."}, {"type": "boolean", "name": "force", "description": "    Process the actions without worry about the flagged value..."}], "guessedname": "processingAction", "guessedtype": "function", "public": ""}, "onNavigate": {"return": {"type": "", "description": "void"}, "description": "Callback method for click events", "private": "", "params": [{"type": "Event", "name": "e", "description": "        DOM event"}], "guessedname": "onNavigate", "guessedtype": "function"}, "onRollOver": {"return": {"type": "", "description": "void"}, "description": "Callback method for mouseover events", "private": "", "params": [{"type": "Event", "name": "e", "description": "        DOM event"}], "guessedname": "onRollOver", "guessedtype": "function"}, "onRollOut": {"return": {"type": "", "description": "void"}, "description": "Callback method for mouseout events", "private": "", "params": [{"type": "Event", "name": "e", "description": "        DOM Event"}], "guessedname": "onRollOut", "guessedtype": "function"}, "getOwnerByClassName": {"return": {"type": "Node", "description": "DOM Element or null"}, "description": "Analyzing the element and the ancestor path to find a node with a certain classname", "params": [{"type": "Node", "name": "node", "description": "    \t\t DOM element that should be analyzed"}, {"type": "String", "name": "tagName", "description": "        DOM event"}], "guessedname": "getOwnerByClassName", "guessedtype": "function", "public": ""}, "onProperty": {"return": {"type": "", "description": "void"}, "description": "Callback method for right click events", "private": "", "params": [{"type": "Event", "name": "e", "description": "        DOM event"}], "guessedname": "onProperty", "guessedtype": "function"}, "addLayer": {"return": {"type": "", "description": "boolean if not exists..."}, "description": "Creating a new behaviors layer...", "params": [{"type": "string||array", "name": "layers", "description": "  Behaviors layers GUID"}, {"type": "object", "name": "scope", "description": "  Custom  Event default execution scope"}], "guessedname": "addLayer", "guessedtype": "function", "public": ""}}, "static": "", "file": "bubbling.js", "guessedtype": "function", "shortname": "Bubbling", "description": "The Bubbling Core Object"}, "YAHOO.widget.TooltipManager": {"name": "YAHOO.widget.TooltipManager", "namespace": "YAHOO.widget", "module": "tooltipmanager", "guessedname": "TooltipManager", "methods": {"hide": {"return": {"type": "", "description": "void"}, "description": "Hide the current tooltip", "guessedname": "hide", "guessedtype": "function"}, "render": {"return": {"type": "", "description": "void"}, "description": "Rendering the current tooltip.", "guessedname": "render", "guessedtype": "function"}, "show": {"return": {"type": "", "description": "void"}, "description": "Show the current tooltip", "guessedname": "show", "guessedtype": "function"}, "compilePath": {"return": {"type": "String", "description": ""}, "params": [{"type": "String", "name": "uri", "description": "   \turl that should be analyzed"}, {"type": "Number", "name": "limit", "description": " \tmaximum number of characters"}], "description": "Analyze a path", "guessedname": "compilePath", "guessedtype": "function"}, "dismiss": {"return": {"type": "", "description": "void"}, "description": "Hiding the current tooltip", "guessedname": "dismiss", "guessedtype": "function"}, "compileBody": {"return": {"type": "", "description": "void"}, "params": [{"type": "Node", "name": "el", "description": " \tDOM Element"}], "description": "Analyze a dom element, and build the body of the tooltip based on the title, access-key and title", "guessedname": "compileBody", "guessedtype": "function"}, "delay": {"return": {"type": "", "description": "void"}, "description": "Delay the tooltip show action few miliseconds", "guessedname": "delay", "guessedtype": "function"}, "init": {"return": {"type": "", "description": "void"}, "description": "Initialization process (optional).", "guessedname": "init", "guessedtype": "function"}, "check": {"return": {"type": "", "description": "void"}, "params": [{"type": "Event", "name": "e", "description": " DOM Event"}, {"type": "HTMLElement", "name": "el", "description": " DOM Element"}], "description": "Analyzing the event and the target", "guessedname": "check", "guessedtype": "function"}, "finder": {"return": {"type": "Node", "description": ""}, "params": [{"type": "Node", "name": "el", "description": "\t\tDOM Element"}], "description": "Returns a node element that represent the first parent with the class yui-tip or null.", "guessedname": "finder", "guessedtype": "function"}}, "static": "", "file": "tooltips.js", "guessedtype": "function", "shortname": "TooltipManager", "description": "The Tooltips Manager Widget"}, "YAHOO.plugin.Dispatcher": {"name": "YAHOO.plugin.Dispatcher", "namespace": "YAHOO.plugin", "module": "dispatcher", "guessedname": "Dispatcher", "methods": {"jsLoader": {"return": {"type": "", "description": "string  ID reference to the new dispatcher's thread"}, "description": "Fetching a remote javascript file that will be processed thru this object...", "params": [{"type": "object", "name": "uri", "description": "       Remote js file that will be loaded using AJAX"}, {"type": "object", "name": "config", "description": "    Literal object with the user configuration vars"}], "guessedname": "jsLoader", "guessedtype": "function", "public": ""}, "addUnit": {"return": {"type": "", "description": "object \treference to the unit"}, "description": "delegate the addUnit layout method...", "params": [{"type": "object", "name": "unit", "description": "         reference to the unit..."}, {"type": "object", "name": "layout", "description": "       reference to the layout..."}, {"type": "object", "name": "config", "description": "       Literal object with the user configuration vars"}], "guessedname": "addUnit", "guessedtype": "function", "public": ""}, "applyCSS": {"return": {"type": "", "description": "boolean  the operation result"}, "description": "Injecting CSS in the current page", "params": [{"type": "string", "name": "cssCode", "description": "   CSS content that will be injected"}, {"type": "object", "name": "params", "description": "    Literal object with the tag configuration params"}, {"type": "object", "name": "config", "description": "    Literal object with the dispatcher configuration values"}], "guessedname": "applyCSS", "guessedtype": "function", "public": ""}, "process": {"return": {"type": "", "description": "object  reference to the thread handle..."}, "description": "Starting the process for a content...", "params": [{"type": "Node} el     \t\t\t{HTMLElement | String | Object", "name": "The", "description": " html element that represents the dynamic area."}, {"type": "string", "name": "content", "description": "       Content to be processed"}, {"type": "object", "name": "config", "description": "    \tLiteral object with the user configuration vars"}, {"type": "boolean", "name": "flag", "description": "    \t    If the call was internal or external"}], "guessedname": "process", "guessedtype": "function", "public": ""}, "firewall": {"return": {"type": "", "description": "String"}, "description": "Analyze the uri before start the downloading process (if the uri isn't in over the current domain name, the dispatcher can use a proxy)", "params": [{"type": "String", "name": "uri", "description": "     \t  Remote URL"}, {"type": "Object", "name": "config", "description": "      Used to pass the user configuration thru the chain of execution"}, {"type": "Boolean", "name": "monolitic", "description": "  Do not use proxy"}], "guessedname": "firewall", "guessedtype": "function", "public": ""}, "_display": {"return": {"type": "", "description": "boolean"}, "params": [{"type": "Object", "name": "el", "description": "    \t\tElement reference"}, {"type": "string", "name": "c", "description": "     \t\tContent to display"}, {"type": "Object", "name": "config", "description": "    User configuration (useful for future implementations)"}], "description": "Display the content inside the element", "private": ""}, "init": {"return": {"type": "", "description": "void"}, "description": "Initialization routine (optional)", "params": [{"type": "object", "name": "c", "description": "   \tdefault configuration object"}], "guessedname": "init", "guessedtype": "function", "public": ""}, "obj2query": {"return": {"type": "", "description": "string"}, "description": "converting a literal object into a query string", "params": [{"type": "object", "name": "params", "description": "       Literal object to create the url querystring"}], "guessedname": "obj2query", "guessedtype": "function", "public": ""}, "isAlive": {"return": {"type": "", "description": "boolean"}, "description": "Verify if the a process is still alive", "params": [{"type": "object", "name": "hd", "description": "   Process handle"}], "guessedname": "isAlive", "guessedtype": "function", "public": ""}, "onDestroy": {"return": {"type": "", "description": "boolean"}, "description": "subscribe a new destroyer for a certain area...", "params": [{"type": "string", "name": "hd", "description": "   \tUnique id for the area to be monitored"}, {"type": "function", "name": "bh", "description": "   \tListener"}, {"type": "object", "name": "scope", "description": "   \tExecution scope"}], "guessedname": "onDestroy", "guessedtype": "function", "public": ""}, "augmentURI": {"return": {"type": "", "description": "string"}, "description": "augment an url with more parameters, overriding...", "params": [{"type": "string", "name": "url", "description": "   url that should be expanded with new arguments"}, {"type": "string|array", "name": "m", "description": "   MoreParams: string: param1=value1&param2=value2 or associative array"}], "guessedname": "augmentURI", "guessedtype": "function", "public": ""}, "kill": {"return": {"type": "", "description": "void"}, "description": "Kill a process...", "params": [{"type": "object", "name": "handle", "description": "   Process handle"}], "guessedname": "kill", "guessedtype": "function", "public": ""}, "delegate": {"return": {"type": "", "description": "void"}, "description": "delegate the set content method...", "params": [{"type": "object", "name": "tab", "description": "\t\treference to the tab..."}, {"type": "object", "name": "tabview", "description": "   reference to the tabview..."}, {"type": "object", "name": "config", "description": "    Literal object with the user configuration vars"}], "guessedname": "delegate", "guessedtype": "function", "public": ""}, "_destroy": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "el", "description": "    \tDOM Element reference"}, {"type": "Object", "name": "config", "description": "    User configuration (useful for future implementations)"}], "description": "Destroy will be fired before remove the innerHTML in the displaying process", "private": ""}, "_dispatch": {"return": {"type": "", "description": "boolean"}, "params": [{"type": "Object", "name": "hd", "description": "     \t\tThread's handle"}, {"type": "Object", "name": "config", "description": "    Used to pass the user configuration thru the chain of execution"}], "description": "Dispatching the next node of the handle", "private": ""}, "_exec": {"return": {"type": "", "description": "boolean"}, "params": [{"type": "Object", "name": "hd", "description": "     \t\tThread's handle"}, {"type": "string", "name": "c", "description": "     \t\tContent to execute"}, {"type": "Object", "name": "config", "description": "    User configuration (useful for future implementations)"}], "description": "Executing a javascript script segment", "private": ""}, "_parse": {"return": {"type": "", "description": "string"}, "params": [{"type": "Object", "name": "hd", "description": "    \t\tElement reference"}, {"type": "string", "name": "s", "description": "     \t\tString with the script tags inside..."}], "description": "Parse the string, remove the script tags, and create the execution thread...", "private": ""}, "toString": {"return": {"type": "String", "description": ""}, "description": "Returns a string representing the dispatcher plugin.", "guessedname": "toString", "guessedtype": "function"}, "fetch": {"return": {"type": "", "description": "object  Reference to the connection handle"}, "description": "Fetching a remote file that will be processed thru this object...", "params": [{"type": "Node} el     \t\t{HTMLElement | String | Object", "name": "The", "description": " html element that represents the dynamic area."}, {"type": "object", "name": "uri", "description": "       Remote file that will be loaded using AJAX"}, {"type": "object", "name": "config", "description": "    Literal object with the user configuration vars"}], "guessedname": "fetch", "guessedtype": "function", "public": ""}, "destroy": {"return": {"type": "", "description": "void"}, "description": "Destroy an area...", "params": [{"type": "object", "name": "handle", "description": "   Process handle"}], "guessedname": "destroy", "guessedtype": "function", "public": ""}, "cssLoader": {"return": {"type": "", "description": "string  ID reference to the new dispatcher's thread"}, "description": "Fetching a remote CSS file that will be processed thru this object...", "params": [{"type": "object", "name": "uri", "description": "       Remote CSS file that will be loaded using AJAX"}, {"type": "object", "name": "config", "description": "    Literal object with the user configuration vars"}], "guessedname": "cssLoader", "guessedtype": "function", "public": ""}}, "static": "", "file": "dispatcher.js", "guessedtype": "function", "shortname": "Dispatcher", "description": "The Dispatcher Plugin"}}, "version": "2.2", "namespaces": ["YAHOO.widget", "YAHOO", "YAHOO.plugin"]}